name: Update Release Files

on:
  release:
    types: [published]  # Trigger the workflow when a release is published

jobs:
  update-files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Fetch latest release info from GitHub API
        run: |
          # Fetch the latest release details from GitHub API
          release_data=$(curl -s https://api.github.com/repos/Flyingbacen/URL-Shortener-Extension/releases/latest)
          
          # Extract version and URL from the release data
          version=$(echo "$release_data" | jq -r '.tag_name')
          codebase_url=$(echo "$release_data" | jq -r '.assets[0].browser_download_url')

          # Update the XML file with the latest release version and URL
          xml_content="<?xml version='1.0' encoding='UTF-8'?>\n"
          xml_content+="<gupdate xmlns='http://www.google.com/update2/response' protocol='2.0'>\n"
          xml_content+="  <app appid='keooinmjjfpbpfdaljdlloiabhlhnnek'>\n"
          xml_content+="    <updatecheck codebase='$codebase_url' version='$version' />\n"
          xml_content+="  </app>\n"
          xml_content+="</gupdate>\n"
          
          # Save the updated content to update.xml
          echo -e "$xml_content" > update-chrome.xml

          # Update the JSON file with the latest release version and URL
          json_content=$(cat addons.json | jq --arg version "$version" --arg url "$codebase_url" '.addons["{53e85a65-3531-4e87-a95d-204882456e22}"].updates[0].version = $version | .addons["{53e85a65-3531-4e87-a95d-204882456e22}"].updates[0].update_link = $url')

          # Save the updated content to addons.json
          echo "$json_content" > update-firefox.json

      - name: Commit and push updated files
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add update.xml addons.json
          git commit -m "Update update.xml and addons.json to latest release"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
